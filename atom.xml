<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Liuyix]]></title>
  <link href="http://liuyix.org/atom.xml" rel="self"/>
  <link href="http://liuyix.org/"/>
  <updated>2013-03-09T17:51:42+08:00</updated>
  <id>http://liuyix.org/</id>
  <author>
    <name><![CDATA[liuyix]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[期待 Octopress 2.1]]></title>
    <link href="http://liuyix.org/blog/2013/expecting-octopress-2-dot-1/"/>
    <updated>2013-03-08T00:11:00+08:00</updated>
    <id>http://liuyix.org/blog/2013/expecting-octopress-2-dot-1</id>
    <content type="html"><![CDATA[<p>想给Octopress添加几个新功能,想目录的自动生成和点击图片的弹出效果。</p>

<p>搜索了一番，发现有现成的解决方案，不过稍微显得繁琐，原因之一是要手动集成jQuery，许多有趣的功能都依赖于这个强大的js库，纳闷为什么作者没有支持，搜索之后发现很早之前就有人提出这个<a href="https://github.com/imathis/octopress/issues/637#issuecomment-6565847">疑问</a>了，作者给予了回答，大意是太臃肿没必要，然社区群众们呼声很高，Octopress计划在2.1版本中支持jQuery!  </p>

<blockquote><p>&#8230;Eventually I decided to add jQuery because that is what the community wants and it makes it easier for folks to work with javascript on Octopress. &#8230;</p><footer><strong>imathis, author of Octopress</strong> <cite><a href="https://github.com/imathis/octopress/issues/637#issuecomment-6565847">github.com/imathis/octopress/&hellip;</a></cite></footer></blockquote>

<p>很期待新版本的Octopress!!</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Hello Octopress!]]></title>
    <link href="http://liuyix.org/blog/2013/hello-octopress/"/>
    <updated>2013-03-07T18:45:00+08:00</updated>
    <id>http://liuyix.org/blog/2013/hello-octopress</id>
    <content type="html"><![CDATA[<p><img src="http://liuyix.org/images/octopress-logo.png" title="" /></p>

<h2 id="octopress">初识Octopress</h2>

<p>忙里偷闲，折腾下Octopress～</p>
<blockquote><p>Octopress is a framework designed by Brandon Mathis for Jekyll, the blog aware static site generator powering Github Pages.</p><footer><strong>http://octopress.org</strong></footer></blockquote>
<p>Octopress说白了就是一个可以使用markdown<sup id="fnref:markdown"><a href="#fn:markdown" rel="footnote">1</a></sup>写博客的静态网页生成后端。而且还可以利用<a href="http://pages.github.com/" title="github pages">github pages</a>做自己的博客。<br />
使用了一段时间的Wordpress写博客，然后写着写着就没有然后了。没有坚持下来的原因很大一部分是因为自己，当然(很喜欢这个“当然”)Wordpress不爽体验也是一个原因。这促使我考虑Wordpress的替代方案。</p>

<h3 id="wordpressoctopress">[吐槽]从Wordpress转移到Octopress的原因</h3>

<p>吐槽Wordpress各种不爽之前，先声明这不是技术上的比较，也不是产品上的优劣比较，我只是从个人需求的角度说一下Wordpress不适合写技术博客，也可以说不能快速的书写有质量的文章。 
简单的说Wordpress写博客，需要离开编辑器，操作不便，还要操心其他不相关的事。  </p>

<h4 id="emacs">不能很方便的(在emacs里)写博客</h4>

<p><span class="pullquote-right" data-pullquote="Wordpress写博客，需要离开编辑器，操作不便，还要操心其他不相关的事。">
程序员优点之一就是 <em>“懒”</em> ，自然写博客也懒得离开编辑器在网页上码字，而且网页上码字体验远不如顺手的编辑器，还必须要联网，最让人受不了的就是手要离开键盘，用 <em>鼠标</em> 来进行各种操作！（Windows用户你不会理解的…）。<br />
Wordpress写博客，需要离开编辑器，操作不便，还要操心其他不相关的事。
使用Wordpress的这段时间里，我一直在不停的探索如何更高效更舒服的：从最初的网页上的编辑器插件，到搜索各种Linux,Windows客户端( <a href="http://sns.juziyue.com" title="菊子曰的网站">菊子曰</a>是这一时期的终点，使用上很适合非程序员，但不幸的是只有Windows版本), 最终遇到了org2blog——使用emacs org-mode来写博客。经过我持续不懈的折腾，Wordpress这个诟病基本被我解决掉了。<br />
</span></p>

<h5 id="octopress-side">Octopress Side</h5>

<p>Octopress前端支持markdown类的语法，和org-mode相比，同样适合编写格式化的文档，语法相似，更加精简。更欢乐的是markdown文本非常具有可读性（这也是markdown的设计哲学）。<br />
不仅如此，依托于github，博客文章还具有云端 <em>增量备份</em> 的功能。这点和Wordpress不同，Wordpress上写好的内容用以HTML方式存入MySQL数据库，虽然也有备份的功能，可本地化特点的缺失，<em>需要离开编辑器操作</em> 实在是个鸡肋。
写作之后的同步操作也无需离开编辑器，几条命令就搞定网站！</p>

<h4 id="section">需要购买主机</h4>

<p>这是使用Wordpress写博客首先需要操心的事。搭建需要花钱买主机停放你的站点，虽然成本不高，但也不是无成本的。我目前的消费水平还不足以为了一个每天只有不到100IP的小站点购买VPS，需要精打细算——不仅要选择哪家主机划算，还要花折腾主机，还时不时地担心自己或者服务商或者同IP的莫个站点被GFW墙掉。总之一个字“累”！</p>

<h5 id="octopress-side-1">Octopress Side</h5>

<p>首先是免费，其次还不如管访问延时等主机相关的问题了。还记得曾有一段时间为了优化访问，花了很多精力在减少插件、优化插件、压缩网页上。虽然建站的很多东西，again, 和写博客是无关的。相比之下，Octopress实际最后就是静态的网页而非动态网站，所以不需要进行优化。</p>

<h4 id="section-1">博客的配置相对复杂</h4>

<p>玩过Wordpress的人都明白平时最常折腾的就是插件和主题，还有Wordpress的升级。<br />
对于只想简简单单写技术博客，写日记，发牢骚的人来说，这些也是额外需要费心思的地方，而且没点时间和技术，博客还会显得丑陋不堪，缺乏美感。 </p>

<h5 id="octopress-side-2">Octopress Side</h5>

<p>认识Octopress就是在一次搜索时看到一个技术博客，那个博客让我眼前一亮——简洁、大方，没有大多数Wordpress博客给人的花哨之感，很对程序员的胃口，仔细读了那个博客，才知道除了Wordpress还有一个叫Octopress的东东。<br />
Octopress在界面上完成度很高，可以说不需要任何修改，其简约之美也足以媲美大多数的Wordpress主题。于是可以更加专注于内容。  </p>

<p>第一次写Octopress，各种不熟练，花了好久。就先写到这里，有时间再写下自己的配置过程。</p>

<hr />

<div class="footnotes">
  <ol>
    <li id="fn:markdown">
      <p>[http://en.wikipedia.org/wiki/Markdown]<a href="#fnref:markdown" rel="reference">&#8617;</a></p>
    </li>
  </ol>
</div>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[我的PKM——Linux下的个人知识管理(PKM)之工具推荐]]></title>
    <link href="http://liuyix.org/blog/2011/pkm-tools-on-linux-recommendation/"/>
    <updated>2011-05-19T18:58:49+08:00</updated>
    <id>http://liuyix.org/blog/2011/pkm-tools-on-linux-recommendation</id>
    <content type="html"><![CDATA[<p>个人知识管理（以下简称pkm）内容上，国内有影响力的博客以及一些国产的软件都集中于windows平台，很少有关注linux平台。对于linux控来说，有些小遗憾。</p>

<p>本文的主要目的就是分享一下我在Linux上实践pkm的一点心得。介绍我目前使用的工具和一些平时收集的策略。由于自己也是刚刚接触实践pkm，因此不免会有内容不全面、不到位的情况，请各看家轻拍转。</p>

<p>我理解的pkm的大致的几个过程：收集、积累、检索应用与分享。<!-- more --></p>

<h2 id="google-reader--evernote">收集过程：Google Reader + 麦库/Evernote</h2>

<p>这一过程因人而异，我个人主要使用的是google reader，因为阅读的主要内容是一些博客，因此通过RSS订阅到google reader直接阅读。如果获取的信息不是通过google reader得到的，而是通过搜索得到的，则通过麦库（严格讲是麦库的chrome插件）收集。更多关于麦库的使用，可以参考我的博文。收集时可以通过添加“未整理”等标签以及放入指定的文件夹实现分类。<!-- more --></p>

<h2 id="zim--">知识的存储过程：Zim + 麦库</h2>

<p>知识的存储过程，我使用的是建立个人wiki的方法完成知识的有效组织、整理分类。这样做的好处之一就是在存储整理的过程之中会潜移默化的对知识进行初步的消化。</p>

<h3 id="zim">Zim</h3>

<p>Zim是Linux平台下图形化的离线wiki工具，可以建立个人wiki，是我目前接触使用的个人wiki工具。它的官方网站：<a href="http://zim-wiki.org/">http://zim-wiki.org/</a></p>

<p>使用wiki进行知识存储的最大的优势同时也是最大的挑战就在于知识的分类——如何将所有的知识组织起来。分类也是因人而异的，不同职业，不同背景的人其分类的策略是不同的。目前，我的知识主要集中在技术和阅读方面的，因此初步的是按照技术的分类（linux,cpp,读书笔记），起步阶段，内容较少，因此没有必要弄的很复杂，随着内容的逐渐增多，可以适当的添加父类重新组织。</p>

<p>Zim是一个本地化的工具，在云计算逐渐流行的今天，我们还是需要一款云端工具，这里我推荐使用麦库。麦库的定位就是Evernote的竞争者。</p>

<h4 id="alternatives">Alternatives</h4>

<p>Emacser可以使用<a href="http://orgmode.org">org-mode</a>来作为本地的wiki工具，Vimer可以使用<a href="http://www.vim.org/scripts/script.php?script_id=2226">vimwiki</a>来进行wiki工作。</p>

<h3 id="evernote">麦库 —— 国内类Evernote产品</h3>

<p><a href="http://note.sdo.com">麦库</a>是一款国内类Evernote产品，由盛大研究院开发。<br />
Evernote应该说是当前比较的热门的网络笔记本工具，其最大的优势就在于数据存储在“云端”，你可以在Android手机、浏览器、Windows平台甚至是Linux平台上方便同步使用。而且支持文件夹和标签功能，不仅可以记录文字，还可以上传文件等等。一个生动的使用情景：用朋友家的电脑上网的时候看到了某篇日志不错，于是利用浏览器的插件（或者使用在线的网页版Evernote）将内容整理到Evernote网络笔记本上，之后出门的时候可以通过手机上的Evernote应用查看更改内容。到了家里，打开电脑里的Evernote程序编辑整理。从此不必担心数据的丢失，还可以随时的浏览更改自己的文件。</p>

<p>上面所说的Evernote的功能，麦库都具备。同时麦库还具备一个Evernote不具备的重要功能： <strong>国产</strong> 。在国内的众所周知的网络条件下，国外的优秀服务说不定哪天就访问不了，而且即使可以使用还得忍受着异常缓慢的网速，而麦库作为一款国产的功能上可以媲美Evernote的应用，速度上和稳定性上可以完胜Evernote,不必担心哪天一醒来登录不了Evernote了。</p>

<h3 id="update-2013-3">Update 2013-3</h3>

<p>目前Evernote已经特意为中国地区推出了专有的服务——<a href="http://yinxiang.com">印象笔记</a> ，其对中国区用户重视程度可见一斑，可以说国内的类Evernote产品遇到了强大的对手。喜欢使用Evernote可以体验下。另外网易云笔记也是一个很不错的选择(可惜笔者已经在麦库上存储了很多的东西，懒得再迁移了)。</p>

<h2 id="section">知识的检索与应用：</h2>

<p>知识的检索依赖于知识的存储。<br />
如果使用的Zim，可以在存储时加入适当的标签，这样在检索时可以利用标签进行检索。当然也可以利用全文检索的功能。Zim还具有Wiki服务器浏览方式，在使用体验上更接近于Wiki。<br />
Evernote/麦库：Evernote和麦库可以通过标签等方式进行检索。Evernote还结合了google的搜索功能。麦库在检索方面有一个只能信息检索（可以筛选出email,电话等，还可以自定义正则表达式）。</p>

<h2 id="section-1">知识的分享：撰写文章+微博分享</h2>

<p>pkm最终的目标是将外部的知识转换为自己的知识，即将知识充分的吸收，变为自己的东西。与他人交流分享是知识消化吸收的最好方式。教授知识是学习的最好方法。</p>

<h2 id="section-2">参考链接：</h2>
<p><a href="http://xbeta.info/pkm-3.htm"> 个人知识管理的误区(by Albert) </a> via <a href="http://xbeta.info">Xbeta</a></p>

<p><a href="http://xiaoy.info/">Space of Yuan &amp; Yum</a>的<a href="http://xiaoy.info/pkm/dokuwiki/doku.php?id=personalpromotion:pkm:index">PKM wiki</a></p>
]]></content>
  </entry>
  
</feed>
